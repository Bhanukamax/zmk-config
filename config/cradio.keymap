/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define NUM 1
#define NAV 2
#define FN 3
#define BT 4
#define MOUSE 5

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <14 24>;
            bindings = <&kp ESC>;
        };

         combo_tab {
            timeout-ms = <50>;
            key-positions = <4 14>;
            bindings = <&kp TAB>;
        };


        combo_lgui {
            timeout-ms = <50>;
            key-positions = <13 23>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <16 26>;
            bindings = <&kp RGUI>;
        };

        combo_bspc {
            timeout-ms = <50>;
            key-positions = <15 25>;
            bindings = <&kp BSPC>;
        };

        combo_sl_fn {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&sl FN>;
        };

        combo_to_mouse {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&to MOUSE>;
        };

        combo_bootloader {
            timeout-ms = <50>;
            key-positions = <16 17 18 19>;
            bindings = <&bootloader>;
        };


    };

        keymap {
                compatible = "zmk,keymap";

       		DEFAULT {
		bindings = <
		&mt LCTL Q	    &kp W	 &kp E	&kp R	 &kp T 					&kp Y	 &kp U	 &kp I		&kp O	    &kp P
		&mt LCTL A	    &kp S	 &kp D	&kp F	 &kp G 			       	&kp H	 &kp J	 &kp K		&kp L	    &mt LCTL SEMI
		&mt LALT Z		&kp X	 &kp C	&kp V	 &kp B				    &kp N	 &kp M	 &kp CMMA	&kp DOT		&mt RALT SLASH
          				                &mo NAV  &mt LSFT SPC  			&mo NUM  &kp RET
		>;
		};



       		NUM {
		bindings = <
		&kp LT		 &kp LBKT	 &kp LPAR	  &kp LBRC	 &kp TAB 				&kp Y		  &kp NUM_7		&kp NUM_8	 &kp NUM_9	 &kp RALT
		&kp GT		 &kp RBKT	 &kp RPAR	  &kp RBRC   &kp SQT				&kp DQT		  &kp NUM_4		&kp NUM_5	 &kp NUM_6	 &kp BSPC
		&kp MINUS	 &kp EQUAL	 &kp UNDER	  &kp PLUS	 &kp GRAVE			    &kp NUM_0	  &kp NUM_1		&kp NUM_2	 &kp NUM_3	 &kp BSLH
		                                      &kp LCTL   &trans  				&trans        &trans
		>;
		};

       		NAV {
		bindings = <
		&kp NUM_1   &kp NUM_2       &kp NUM_3    &kp NUM_4      &kp NUM_5		     &kp HOME         &kp PG_UP   &kp PG_DN   &kp END     &kp NUM_0
		&kp LCTL    &kp LSFT        &kp LALT     &kp LGUI       &kp ESC 		     &kp LEFT         &kp DOWN    &kp UP      &kp RIGHT   &kp BSPC
		&bt BT_CLR  &bt BT_SEL 0 	&bt BT_SEL 1 &bt BT_SEL 2   &bt BT_SEL 3         &kp LG(GRAVE)    &kp GRAVE   &kp LBKT    &kp RBKT    &kp DEL
					                             &trans         &trans  			 &trans           &trans
		>;
		};

		FN {
		bindings = <
		&none	    &none	&none	        &none	            &none				&none	&none	&none	&none	&none
		&kp C_PP	&none	&kp C_VOL_DN	&kp C_VOL_UP	    &none				&none	&none	&none	&none	&none
		&kp K_PP	&none	&kp K_VOL_DN	&kp K_VOL_UP	    &none				&none	&none	&none	&none	&none
                                            &trans              &trans  			&trans  &trans
		>;
		};

		BT {
		bindings = <
		&kp NUM_1	    &kp NUM_2	    &kp NUM_3	    &kp NUM_4	&kp NUM_5 		    &trans	    &trans			 &trans			 &trans			 &trans
		&kp F1	        &kp F2	        &kp F3	        &kp F4		&kp F5  		    &trans	    &bt BT_SEL 0	 &bt BT_SEL 1	 &bt BT_SEL 2	 &trans
		&bt BT_CLR	    &bt BT_NXT		&bt BT_PRV	    &kp F6		&kp F7 				&trans	    &kp PG_DN		 &kp K_VOL_DN	 &trans			 &trans
					                                    &trans      &trans  			&trans      &trans
		>;
		};

		MOUSE {
		bindings = <
		&none	    &none	&none	        &none	            &none				&none	        &mwh SCROLL_DOWN	&mmv MOVE_UP	&mwh SCROLL_UP              &none
		&kp C_PP	&none	&kp C_VOL_DN	&kp C_VOL_UP	    &none				&kp M	        &mmv MOVE_LEFT	    &mmv MOVE_DOWN	&mmv MOVE_RIGHT	            &none
		&kp K_PP	&none	&kp K_VOL_DN	&kp K_VOL_UP	    &none				&none	        &mkp RCLK	            &none	        &none	                &none
		                                    &trans              &trans  	        &to DEFAULT     &mkp LCLK
		>;
		};

	};
};
